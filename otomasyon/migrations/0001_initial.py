# Generated by Django 5.2.4 on 2025-10-06 13:57

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Şirket Adı')),
                ('domain', models.CharField(blank=True, max_length=100, verbose_name='Web Sitesi')),
                ('plan_type', models.CharField(choices=[('free', 'Ücretsiz'), ('starter', 'Starter'), ('professional', 'Professional'), ('enterprise', 'Enterprise')], default='free', max_length=20, verbose_name='Plan Türü')),
                ('max_subscribers', models.IntegerField(default=1000, verbose_name='Maksimum Abone')),
                ('max_emails_per_month', models.IntegerField(default=10000, verbose_name='Aylık Maksimum E-posta')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Automation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Otomasyon Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('trigger_type', models.CharField(choices=[('subscription', 'Abonelik'), ('date', 'Tarih'), ('behavior', 'Davranış'), ('webhook', 'Webhook')], default='subscription', max_length=20, verbose_name='Tetikleyici Türü')),
                ('trigger_config', models.JSONField(default=dict, verbose_name='Tetikleyici Ayarları')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('delay_minutes', models.IntegerField(default=0, verbose_name='Gecikme (Dakika)')),
                ('interval_minutes', models.IntegerField(default=60, verbose_name='Aralık (Dakika)')),
                ('total_triggered', models.IntegerField(default=0, verbose_name='Toplam Tetiklenme')),
                ('total_sent', models.IntegerField(default=0, verbose_name='Toplam Gönderim')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='automations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Otomasyon',
                'verbose_name_plural': 'Otomasyonlar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-posta')),
                ('reason', models.CharField(choices=[('bounce', 'Geri Dönüş'), ('complaint', 'Şikayet'), ('manual', 'Manuel'), ('spam', 'Spam')], default='bounce', max_length=50, verbose_name='Sebep')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blacklist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kara Liste',
                'verbose_name_plural': 'Kara Liste',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Kampanya Adı')),
                ('subject', models.CharField(max_length=200, verbose_name='Konu')),
                ('preheader', models.CharField(blank=True, max_length=100, verbose_name='Ön Başlık')),
                ('content', models.TextField(verbose_name='İçerik')),
                ('html_content', models.TextField(blank=True, verbose_name='HTML İçerik')),
                ('segments', models.JSONField(blank=True, default=list, verbose_name='Segmentler')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('scheduled', 'Planlandı'), ('sending', 'Gönderiliyor'), ('sent', 'Gönderildi'), ('paused', 'Durduruldu'), ('failed', 'Başarısız')], default='draft', max_length=20, verbose_name='Durum')),
                ('scheduled_time', models.DateTimeField(blank=True, null=True, verbose_name='Planlanan Zaman')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Gönderim Zamanı')),
                ('is_ab_test', models.BooleanField(default=False, verbose_name='A/B Test')),
                ('ab_test_subject', models.CharField(blank=True, max_length=200, verbose_name='A/B Test Konusu')),
                ('ab_test_percentage', models.IntegerField(default=50, verbose_name='A/B Test Yüzdesi')),
                ('total_sent', models.IntegerField(default=0, verbose_name='Toplam Gönderim')),
                ('delivered', models.IntegerField(default=0, verbose_name='Teslim Edilen')),
                ('opens', models.IntegerField(default=0, verbose_name='Açılma')),
                ('unique_opens', models.IntegerField(default=0, verbose_name='Benzersiz Açılma')),
                ('clicks', models.IntegerField(default=0, verbose_name='Tıklanma')),
                ('unique_clicks', models.IntegerField(default=0, verbose_name='Benzersiz Tıklanma')),
                ('bounces', models.IntegerField(default=0, verbose_name='Geri Dönenler')),
                ('complaints', models.IntegerField(default=0, verbose_name='Şikayetler')),
                ('unsubscribes', models.IntegerField(default=0, verbose_name='Abonelikten Çıkanlar')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Kampanya',
                'verbose_name_plural': 'Kampanyalar',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AutomationStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('step_order', models.IntegerField(default=0, verbose_name='Adım Sırası')),
                ('delay_days', models.IntegerField(default=0, verbose_name='Gecikme (Gün)')),
                ('conditions', models.JSONField(blank=True, default=dict, verbose_name='Koşullar')),
                ('automation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='otomasyon.automation')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otomasyon.campaign', verbose_name='Kampanya')),
            ],
            options={
                'verbose_name': 'Otomasyon Adımı',
                'verbose_name_plural': 'Otomasyon Adımları',
                'ordering': ['step_order'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Şablon Adı')),
                ('template_type', models.CharField(choices=[('basic', 'Basit'), ('newsletter', 'Bülten'), ('promotional', 'Promosyon'), ('transactional', 'Transactional'), ('custom', 'Özel')], default='basic', max_length=20, verbose_name='Şablon Türü')),
                ('subject', models.CharField(max_length=200, verbose_name='Konu')),
                ('content', models.TextField(verbose_name='İçerik')),
                ('html_content', models.TextField(blank=True, verbose_name='HTML İçerik')),
                ('is_default', models.BooleanField(default=False, verbose_name='Varsayılan Şablon')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'E-posta Şablonu',
                'verbose_name_plural': 'E-posta Şablonları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='otomasyon.emailtemplate', verbose_name='Şablon'),
        ),
        migrations.CreateModel(
            name='MailList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Liste Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('list_type', models.CharField(choices=[('customer', 'Müşteri'), ('lead', 'Lead'), ('test', 'Test'), ('vip', 'VIP'), ('general', 'Genel'), ('newsletter', 'Bülten')], default='general', max_length=20, verbose_name='Liste Türü')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('subscriber_count', models.IntegerField(default=0, verbose_name='Abone Sayısı')),
                ('unsubscribed_count', models.IntegerField(default=0, verbose_name='Abonelikten Çıkanlar')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mail Listesi',
                'verbose_name_plural': 'Mail Listeleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='mail_lists',
            field=models.ManyToManyField(to='otomasyon.maillist', verbose_name='Hedef Listeler'),
        ),
        migrations.AddField(
            model_name='automation',
            name='mail_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='otomasyon.maillist', verbose_name='Hedef Liste'),
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='E-posta')),
                ('name', models.CharField(blank=True, max_length=100, verbose_name='Ad Soyad')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('company', models.CharField(blank=True, max_length=100, verbose_name='Şirket')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Doğrulanmış')),
                ('subscribed_at', models.DateTimeField(auto_now_add=True, verbose_name='Abonelik Tarihi')),
                ('unsubscribed_at', models.DateTimeField(blank=True, null=True, verbose_name='Abonelikten Çıkış Tarihi')),
                ('source', models.CharField(blank=True, max_length=100, verbose_name='Kaynak')),
                ('tags', models.JSONField(blank=True, default=list, verbose_name='Etiketler')),
                ('custom_fields', models.JSONField(blank=True, default=dict, verbose_name='Özel Alanlar')),
                ('mail_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscribers', to='otomasyon.maillist')),
            ],
            options={
                'verbose_name': 'Abone',
                'verbose_name_plural': 'Aboneler',
            },
        ),
        migrations.CreateModel(
            name='EmailLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('sent', 'Gönderildi'), ('delivered', 'Teslim Edildi'), ('opened', 'Açıldı'), ('clicked', 'Tıklandı'), ('bounced', 'Geri Döndü'), ('complained', 'Şikayet Edildi'), ('unsubscribed', 'Abonelikten Çıktı')], max_length=20, verbose_name='Durum')),
                ('message_id', models.CharField(blank=True, max_length=200, verbose_name='Mesaj ID')),
                ('opened_at', models.DateTimeField(blank=True, null=True, verbose_name='Açılma Zamanı')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='Tıklanma Zamanı')),
                ('bounce_type', models.CharField(blank=True, max_length=50, verbose_name='Geri Dönüş Türü')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Adresi')),
                ('campaign', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='otomasyon.campaign')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_logs', to='otomasyon.subscriber')),
            ],
            options={
                'verbose_name': 'E-posta Logu',
                'verbose_name_plural': 'E-posta Logları',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Telefon')),
                ('timezone', models.CharField(default='Europe/Istanbul', max_length=50, verbose_name='Zaman Dilimi')),
                ('email_signature', models.TextField(blank=True, verbose_name='E-posta İmzası')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Profil Resmi')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='otomasyon.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Webhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200, verbose_name='Webhook Adı')),
                ('url', models.URLField(verbose_name='Webhook URL')),
                ('event_type', models.CharField(choices=[('subscription', 'Abonelik'), ('unsubscription', 'Abonelikten Çıkma'), ('campaign_sent', 'Kampanya Gönderildi'), ('email_opened', 'E-posta Açıldı'), ('email_clicked', 'E-posta Tıklandı')], max_length=50, verbose_name='Olay Türü')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('secret_key', models.CharField(blank=True, max_length=100, verbose_name='Gizli Anahtar')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Webhook',
                'verbose_name_plural': 'Webhooks',
            },
        ),
        migrations.CreateModel(
            name='Analytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date', models.DateField(verbose_name='Tarih')),
                ('total_campaigns', models.IntegerField(default=0, verbose_name='Toplam Kampanya')),
                ('total_subscribers', models.IntegerField(default=0, verbose_name='Toplam Abone')),
                ('new_subscribers', models.IntegerField(default=0, verbose_name='Yeni Aboneler')),
                ('unsubscribed', models.IntegerField(default=0, verbose_name='Abonelikten Çıkanlar')),
                ('emails_sent', models.IntegerField(default=0, verbose_name='Gönderilen E-postalar')),
                ('emails_delivered', models.IntegerField(default=0, verbose_name='Teslim Edilenler')),
                ('emails_opened', models.IntegerField(default=0, verbose_name='Açılanlar')),
                ('emails_clicked', models.IntegerField(default=0, verbose_name='Tıklananlar')),
                ('emails_bounced', models.IntegerField(default=0, verbose_name='Geri Dönenler')),
                ('delivery_rate', models.FloatField(default=0, verbose_name='Teslim Oranı')),
                ('open_rate', models.FloatField(default=0, verbose_name='Açılma Oranı')),
                ('click_rate', models.FloatField(default=0, verbose_name='Tıklanma Oranı')),
                ('bounce_rate', models.FloatField(default=0, verbose_name='Geri Dönüş Oranı')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analitik',
                'verbose_name_plural': 'Analitik',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ClickTrack',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField(verbose_name='URL')),
                ('click_count', models.IntegerField(default=1, verbose_name='Tıklanma Sayısı')),
                ('email_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clicks', to='otomasyon.emaillog')),
            ],
            options={
                'verbose_name': 'Tıklanma Takibi',
                'verbose_name_plural': 'Tıklanma Takipleri',
                'unique_together': {('email_log', 'url')},
            },
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['status'], name='otomasyon_c_status_457e41_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['scheduled_time'], name='otomasyon_c_schedul_62cc76_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriber',
            index=models.Index(fields=['email'], name='otomasyon_s_email_262a29_idx'),
        ),
        migrations.AddIndex(
            model_name='subscriber',
            index=models.Index(fields=['is_active'], name='otomasyon_s_is_acti_7e9e70_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='subscriber',
            unique_together={('mail_list', 'email')},
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['campaign', 'subscriber'], name='otomasyon_e_campaig_2ed416_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['status'], name='otomasyon_e_status_9ff480_idx'),
        ),
        migrations.AddIndex(
            model_name='emaillog',
            index=models.Index(fields=['created_at'], name='otomasyon_e_created_ba9554_idx'),
        ),
    ]
